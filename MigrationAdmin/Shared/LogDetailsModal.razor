@using Migration.Repository.Delegates
@using Migration.Repository.LogModels
@using Migration.Repository.Publishers
@using Migration.Services
@inject IJSRuntime jsRuntime
@inject ActionsPublisher ActionsPublisher

<div class="modal fade show" id="logDetailsModal" style="display:block" aria-modal="true" role="dialog">
    <div class="modal-dialog" style="max-width:90%;">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">@ModalTitle</h4>
            </div>
            <!-- Modal body -->
            <div class="modal-body" style="height:600px; overflow:scroll">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">Log Details</h4>
                    </div>
                    <div class="card-body">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-12">
                                    <table id="logs_details" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>Details - @LogDetails.LogDateTime</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (LogDetails != null)
                                            {
                                                foreach (var description in LogDetails.Descriptions)
                                                {
                                                    <tr>
                                                        <td>
                                                            @((MarkupString)description)
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-12">
                                    <table id="logs_details" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (LogDetails != null)
                                            {
                                                foreach (var actionLog in LogDetails.ActionsLogs)
                                                {
                                                    <tr>
                                                        <td>
                                                            <button class="btn btn-warning" @onclick="() => ApplyAction(actionLog.Action)">@actionLog.Label</button>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" style="margin-top:15px;" class="btn btn-close" @onclick=ModalOk>Ok</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public LogDetails LogDetails { get; set; }
    [Parameter]
    public string ModalTitle { get; set; }
    [Parameter]
    public bool ShowModalScroll { get; set; }
    [Parameter]
    public EventCallback ModalOk { get; set; }

    protected override void OnInitialized()
    {
        ActionsPublisher.OnEventPublished += OnActionReceived;
    }

    private void OnActionReceived(object sender, ActionsEventArgs e)
    {
        Task.Run(async () => await ShowSuccessAlert(e.Actions.Message));
    }

    private async Task ApplyAction(Func<Task> action)
    {
        await action();
    }

    private async Task ShowSuccessAlert(string message)
    {
        await jsRuntime.InvokeAsync<object>("ShowSuccessAlert", message);
    }
}