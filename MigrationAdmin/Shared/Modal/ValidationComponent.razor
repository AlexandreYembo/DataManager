@using MigrationAdmin.Validations
@inject ValidationMessagePublisher _validationPublisher;

@if (_validationMessages.Any())
{
    <div class="modal fade show" id="logDetailsModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog" style="max-width: 500px;">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title warning"><i class="nav-icon fas fa-warning"></i> Validation error, please check the errors </h4>
                </div>

                <!-- Modal body -->
                <div class="modal-body" style="max-height: 250px">
                    @foreach (var validation in _validationMessages)
                    {
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>@validation.Message</label>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" style="margin-top:15px;" class="btn btn-close" @onclick=ModalOk>Close</button>
                </div>

            </div>
        </div>
    </div>
}
@code {

    private List<ValidationMessage> _validationMessages { get; set; } = new();

    protected override void OnInitialized()
    {
        _validationPublisher.OnEventPublished += OnValidationError;
    }

    private void OnValidationError(object? sender, ValidationMessageEventArgs e)
    {
        _validationMessages = e.ValidationMessages;

        InvokeAsync(StateHasChanged);
    }


    public void ModalOk()
    {
        _validationMessages = new();
    }
}