@using Connectors.Redis
@using Migration.Models
@inject IRepository<JobsCategory> _jobsCategoryRepository;

<label>Job Category</label>
<select class="form-control" id="jobCategory" data-keeper-edited="yes" @onchange="ChangeJobCategory">
    @if (_listJobsCategory != null)
    {
        foreach (var jobsCategory in _listJobsCategory)
        {
            <option value="@jobsCategory.CategoryName">@jobsCategory.CategoryName</option>
        }
    }
</select>

@code {
    private List<JobsCategory> _listJobsCategory;

    [Parameter]
    public EventCallback<JobsCategory> OnJobCategorySelected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _listJobsCategory = await _jobsCategoryRepository.FindAsync();

        if (_listJobsCategory.Any())
        {
            var jobCategory = _listJobsCategory.FirstOrDefault();

            await OnJobCategorySelected.InvokeAsync(jobCategory);
        }
    }

    private async Task ChangeJobCategory(ChangeEventArgs e)
    {
        var jobCategoryName = e.Value.ToString();

        var jobCategory = _listJobsCategory.FirstOrDefault(f => f.CategoryName == jobCategoryName);

        await OnJobCategorySelected.InvokeAsync(jobCategory);
    }
}