@using Migration.Repository.Models
@using Migration.Repository
@using Migration.Infrastructure.Redis
@using Migration.Infrastructure.Redis.Entities
@inject IRepository<DataSettings> _dataSettingsRepository;
@inject IRepository<Profile> _profileRepository;
@inject IJSRuntime jsRuntime
@if (_profile != null)
{
    <div class="modal fade show" id="dataDifferenceModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog" style="max-width:100%;">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Clone Profile</h4>
                </div>

                <!-- Modal body -->
                <div class="modal-body" style="height: 200px; overflow: scroll">
                    <div class="row">
                        <div class="col-sm-2">
                            <label>Environment Name</label>
                            <input class="form-control" data-keeper-edited="yes" @bind="@_profile.JobCategoryId" />
                        </div>
                        <div class="col-sm-2">
                            <label>Name</label>
                            <input class="form-control" data-keeper-edited="yes" @bind="@_profile.Name" />
                        </div>
                        <div class="col-sm-2">
                            <label>Description</label>
                            <input class="form-control" data-keeper-edited="yes" @bind="@_profile.Description" />
                        </div>
                    </div>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button class="btn btn-default" @onclick="CloneProfile"> <i class="nav-icon fas fa-clone"></i> Clone</button>
                    <button type="button" style="margin-top: 15px;" class="btn btn-close" @onclick="ModalOk">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string ProfileId { get; set; }

    [Parameter]
    public string Environment { get; set; }

    private Profile _profile { get; set; }

    [Parameter]
    public EventCallback ModalOk { get; set; }

    private IEnumerable<DataSettings> _dataSettings;

    protected override async Task OnInitializedAsync()
    {
        var profiles = await _profileRepository.FindAsync(Environment);

        _profile = profiles.FirstOrDefault(f => f.DataMappings[0].Id == ProfileId);
        _profile.Name = "Clone-" + _profile.Name;
    }

    private async Task CloneProfile()
    {
        _profile.DataMappings[0].Id = Guid.NewGuid().ToString();
        var redisData = new RedisData<Profile>()
            {
                Data = _profile,
                RedisValue = _profile.Name,
                RedisKey = _profile.JobCategoryId
            };

        await _profileRepository.SaveAsync(redisData);

        await ShowSuccessAlert();
    }

    private async Task ShowSuccessAlert()
    {
        await jsRuntime.InvokeAsync<object>("ShowSuccessAlert", $"Profile configuration cloned");
    }
}