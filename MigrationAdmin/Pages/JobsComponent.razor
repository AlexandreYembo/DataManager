@page "/jobs"
@using Migration.Infrastructure.Redis
@using Migration.Infrastructure.Redis.Entities
@using Migration.Repository.LogModels
@using Migration.Repository.Models
@using Newtonsoft.Json
@inherits CustomComponents;
@inject IRepository<Jobs> _repository;
<div class="content">
    <div class="container-fluid">
        <div class="card card-default">
            <div class="card-header">
                <h3 class="card-title">Jobs</h3>
            </div>
            <div class="card-body">
                <table id="jobs" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Job Id</th>
                            <th>Profile</th>
                            <th>Operation Type</th>
                            <th>Source Pagination (Skip)</th>
                            <th>Destination Pagination (Skip)</th>
                            <th>
                                Status
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (_jobs != null)
                        {
                            foreach (var job in _jobs)
                            {
                                <tr>
                                    <td>
                                        @job.JobId
                                    </td>
                                    <td>
                                        @job.ProfileId
                                    </td>
                                    <td>
                                        @job.OperationType
                                    </td>
                                    <td>
                                        @job.SourceProcessed
                                    </td>
                                    <td>
                                        @job.DestinationProcessed
                                    </td>
                                    <td>
                                        @job.Status
                                    </td>
                                    <td>
                                        <button class="btn btn-default" @onclick="() => GetLog(job)"> <i class="nav-icon fas fa-file-archive"></i> Log</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <Log LogResult="LogResult" IsLoading="Loading"></Log>
    </div>
</div>
@code {
    private List<Jobs> _jobs;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _jobs = await _repository.FindAsync();
        }
        catch
        {
        }
    }

    private async Task GetLog(Jobs job)
    {
        var redisValue = await _repository.FindByKeyAsync(new RedisData<Jobs>()
            {
                RedisValue = job.JobId.ToString()
            });

        LogResult = JsonConvert.DeserializeObject<LogResult>(redisValue.ToString());
    }
}