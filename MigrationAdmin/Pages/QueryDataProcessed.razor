@page "/queryDataProcessed"
@using Newtonsoft.Json.Linq
@using Migration.Infrastructure.Redis
@using Microsoft.AspNetCore.Components
@using Migration.Infrastructure.Redis.Entities
@using Newtonsoft.Json
@inject IRepository<JObject> _localRepository
<div class="card card-default">
    <div class="card-header">
        <h3 class="card-title">Query Data</h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-6">
                <label>Entity</label>
                <input class="form-control" data-keeper-edited="yes" @bind="@_entity" />
            </div>
            <div class="col-sm-6">
                <label>Job Id</label>
                <input class="form-control" data-keeper-edited="yes" @bind="@_jobId" />
            </div>
            <div class="col-sm-6">
                <label>Filter (Field:Value)</label>
                <input class="form-control" data-keeper-edited="yes" @bind="@filter" />
            </div>
        </div>
        <div class="card-footer">
            <button class="btn btn-default" @onclick="() => GetData()"> <i class="nav-icon fas fa-search"></i>Get Data</button>
        </div>
    </div>
</div>

<div class="card card-default">
    <div class="card-header">
        <h3 class="card-title">Query Result</h3>
    </div>
    <div class="card-body">
        <div class="row">
            @if (_data != null)
            {
                foreach (var values in _data.Where(w => !string.IsNullOrEmpty(filter) ? w.SelectToken(filter.Split(":").FirstOrDefault()).ToString() == filter.Split(":").LastOrDefault() : true))
                {
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="card collapsed-card">
                                <div class="card-header">
                                    <h3 class="card-title"> @values["id"]</h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-sm-10">
                                            <pre>@JValue.Parse(values.ToString()).ToString(Formatting.Indented) </pre>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    private string _entity;
    private string _jobId;
    private string filter;

    private List<JObject> _data;

    protected override async Task OnInitializedAsync()
    {


    }

    public async Task GetData()
    {
        _data = await _localRepository.FindAsync(new RedisData<JObject>()
            {
                Id = _entity +"$"+ _jobId + "$"
            });
    }
}